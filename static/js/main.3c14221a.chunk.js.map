{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","handlechange","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filterdMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAGaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACvB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCHZC,G,MAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SAEID,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAK,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCJ7CM,G,MAAW,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACpB,uBAAQZ,UAAW,SAASa,KAAK,SAChCF,YAAaA,EACdG,SAAUF,MC6DCG,G,wDAvCb,aAAc,IAAD,8BACX,gBAiBFC,aAAe,SAACC,GACd,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAhBpC,EAAKC,MAAM,CACTd,SAAS,GACTW,YAAY,IALH,E,qDAWb,WACC,IAAD,OACEI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACV,SAASmB,S,oBAOvC,WAEE,MAAiCC,KAAKN,MAA7Bd,EAAT,EAASA,SAASW,EAAlB,EAAkBA,YACZU,EAAiBrB,EAASsB,QAAO,SAAA3B,GAAO,OAAIA,EAAQE,KAAK0B,cAAcC,SAASb,EAAYY,kBAClG,OACM,sBAAK/B,UAAU,MAAf,UACA,kDACC,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAegB,KAAKZ,eAEtB,cAAC,EAAD,CAAUR,SAAUqB,W,GAnCbI,cCdHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3c14221a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className=\"card-container\">\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&Size=180*180`}/>\r\n       <h2>{props.monster.name}</h2>\r\n       <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport {Card} from '../card/card.component';\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = props =>(\r\n    <div className=\"card-list\">\r\n    {\r\n        props.monsters.map(monster => (<Card key={monster.id} monster={monster}/>))\r\n       }\r\n    </div>\r\n    );","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox =({placeholder,handleChange}) =>(\r\n    <input  className =\"search\" type=\"search\" \r\n     placeholder={placeholder} \r\n    onChange={handleChange}/>\r\n)","import React,{Component} from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Hello My name is Praveen\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nclass App extends Component\n{\n  constructor(){\n    super();\n\n    this.state={\n      monsters:[],\n      searchField:''\n    };\n\n  \n  }\n\n  componentDidMount()\n  {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=>response.json())\n    .then(users=>this.setState({monsters:users}));\n  }\n\n  handlechange = (e) => {\n    this.setState({searchField:e.target.value}  )\n  }\n\n  render()\n  {\n    const  { monsters,searchField} = this.state; \n    const filterdMonsters =monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n          <div className=\"App\">\n          <h1>Monsters Rolodex</h1>\n           <SearchBox \n             placeholder=\"search monsters\"\n             handleChange ={this.handlechange}\n           />   \n           <CardList monsters={filterdMonsters}/>\n          </div>\n        );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}